<%- include('partials/header')%>

	<div class="register-container">
		<div class="register-card">
			<h1 class="register-title">Create Account</h1>

			<!-- Error Message -->
			<div id="errorMessage" class="error-message" style="display: none;"></div>

			<!-- Success Message -->
			<div id="successMessage" class="success-message" style="display: none;"></div>

			<!-- Register Form -->
			<form id="registerForm">
				<div class="form-row">
					<div class="form-group form-group-half">
						<label for="name" class="form-label">Ad</label>
						<input type="text" class="form-input" id="name" name="name" placeholder="Enter your first name"
							required minlength="2" maxlength="50">
					</div>

					<div class="form-group form-group-half">
						<label for="surname" class="form-label">Soyad</label>
						<input type="text" class="form-input" id="surname" name="surname"
							placeholder="Enter your last name" required minlength="2" maxlength="50">
					</div>
				</div>

				<div class="form-group">
					<label for="phoneNumber" class="form-label">Telefon numarası</label>
					<input type="tel" class="form-input" id="phoneNumber" name="phoneNumber"
						placeholder="Enter your phone number" required maxlength="11">
				</div>

				<div class="form-group">
					<label for="password" class="form-label">Password</label>
					<input type="password" class="form-input" id="password" name="password"
						placeholder="Enter your password" required minlength="6">
				</div>

				<div class="form-group">
					<label for="confirmPassword" class="form-label">Confirm Password</label>
					<input type="password" class="form-input" id="confirmPassword" name="confirmPassword"
						placeholder="Confirm your password" required minlength="6">
				</div>

				<div class="form-group checkbox-group">
					<label class="checkbox-label">
						<input type="checkbox" class="form-checkbox" id="termsCheck" required>
						<span class="checkbox-text">I agree to the <a href="#" class="terms-link" data-bs-toggle="modal"
								data-bs-target="#termsModal">Terms of Service</a></span>
					</label>
				</div>

				<button type="submit" class="register-button" id="registerBtn">
					<span id="registerSpinner" class="spinner" style="display: none;"></span>
					Sign Up
				</button>
			</form>

			<div class="login-link">
				<span>Already have an account? </span>
				<a href="/login" class="login-text">Log in</a>
			</div>
		</div>
	</div>

	<!-- Terms Modal -->
	<div class="modal fade" id="termsModal" tabindex="-1" aria-labelledby="termsModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-lg">
			<div class="modal-content bg-dark text-white">
				<div class="modal-header">
					<h5 class="modal-title" id="termsModalLabel">Kullanım Şartları</h5>
					<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
						aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<h6>1. Genel Kullanım</h6>
					<p>Bu platform berber randevu sistemi olarak hizmet vermektedir...</p>

					<h6>2. Gizlilik</h6>
					<p>Kişisel bilgileriniz güvenlik altında tutulacaktır...</p>

					<h6>3. Randevu Kuralları</h6>
					<p>Randevularınızı zamanında iptal etmeniz gerekmektedir...</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
				</div>
			</div>
		</div>
	</div>

	<style>
		.register-container {
			min-height: 100vh;
			display: flex;
			align-items: center;
			justify-content: center;
			background-color: #1a1a1a;
			padding: 20px;
		}

		.register-card {
			background: #2d2d2d;
			border-radius: 8px;
			padding: 40px;
			width: 100%;
			max-width: 450px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		}

		.register-title {
			color: #ffffff;
			font-size: 32px;
			font-weight: 400;
			text-align: center;
			margin-bottom: 40px;
			margin-top: 0;
		}

		.form-row {
			display: flex;
			gap: 15px;
			margin-bottom: 20px;
		}

		.form-group {
			margin-bottom: 20px;
		}

		.form-group-half {
			flex: 1;
			margin-bottom: 0;
		}

		.form-label {
			color: #b0b0b0;
			font-size: 14px;
			display: block;
			margin-bottom: 8px;
		}

		.form-input {
			width: 100%;
			padding: 12px 16px;
			background: #3a3a3a;
			border: 1px solid #4a4a4a;
			border-radius: 6px;
			color: #ffffff;
			font-size: 16px;
			transition: border-color 0.3s ease;
			box-sizing: border-box;
		}

		.form-input:focus {
			outline: none;
			border-color: #8bc34a;
		}

		.form-input::placeholder {
			color: #7a7a7a;
		}

		.form-input.is-invalid {
			border-color: #ff4444;
		}

		.form-input.is-valid {
			border-color: #8bc34a;
		}

		.checkbox-group {
			margin-bottom: 30px;
		}

		.checkbox-label {
			display: flex;
			align-items: flex-start;
			cursor: pointer;
			color: #b0b0b0;
			font-size: 14px;
			line-height: 1.5;
		}

		.form-checkbox {
			width: 18px;
			height: 18px;
			margin-right: 10px;
			margin-top: 2px;
			accent-color: #8bc34a;
			flex-shrink: 0;
		}

		.checkbox-text {
			flex: 1;
		}

		.terms-link {
			color: #8bc34a;
			text-decoration: none;
		}

		.terms-link:hover {
			text-decoration: underline;
			color: #8bc34a;
		}

		.register-button {
			width: 100%;
			padding: 14px;
			background: #8bc34a;
			border: none;
			border-radius: 50px;
			color: #000000;
			font-size: 16px;
			font-weight: 500;
			cursor: pointer;
			transition: background-color 0.3s ease;
			margin-bottom: 30px;
		}

		.register-button:hover {
			background: #7cb342;
		}

		.register-button:disabled {
			background: #6a6a6a;
			cursor: not-allowed;
		}

		.login-link {
			text-align: center;
			color: #b0b0b0;
			font-size: 14px;
		}

		.login-text {
			color: #8bc34a;
			text-decoration: none;
		}

		.login-text:hover {
			text-decoration: underline;
			color: #8bc34a;
		}

		.error-message {
			background: #ff4444;
			color: white;
			padding: 12px;
			border-radius: 6px;
			margin-bottom: 20px;
			font-size: 14px;
		}

		.success-message {
			background: #8bc34a;
			color: black;
			padding: 12px;
			border-radius: 6px;
			margin-bottom: 20px;
			font-size: 14px;
		}

		.spinner {
			display: inline-block;
			width: 16px;
			height: 16px;
			border: 2px solid #ffffff;
			border-radius: 50%;
			border-top-color: transparent;
			animation: spin 1s ease-in-out infinite;
			margin-right: 8px;
		}

		@keyframes spin {
			to {
				transform: rotate(360deg);
			}
		}

		/* Modal dark theme */
		.modal-content.bg-dark {
			background-color: #2d2d2d !important;
			border: 1px solid #4a4a4a;
		}

		.modal-content.bg-dark .modal-header {
			border-bottom: 1px solid #4a4a4a;
		}

		.modal-content.bg-dark .modal-footer {
			border-top: 1px solid #4a4a4a;
		}

		@media (max-width: 480px) {
			.form-row {
				flex-direction: column;
				gap: 0;
			}

			.form-group-half {
				margin-bottom: 20px;
			}

			.register-card {
				padding: 30px 20px;
			}
		}
	</style>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const registerForm = document.getElementById('registerForm');
			const nameInput = document.getElementById('name');
			const surnameInput = document.getElementById('surname');
			const phoneNumberInput = document.getElementById('phoneNumber');
			const passwordInput = document.getElementById('password');
			const confirmPasswordInput = document.getElementById('confirmPassword');
			const registerBtn = document.getElementById('registerBtn');
			const registerSpinner = document.getElementById('registerSpinner');
			const errorMessage = document.getElementById('errorMessage');
			const successMessage = document.getElementById('successMessage');
			const termsCheck = document.getElementById('termsCheck');

			// Name and surname input formatting (only letters)
			[nameInput, surnameInput].forEach(input => {
				input.addEventListener('input', function () {
					this.value = this.value.replace(/[^a-zA-ZçğıöşüÇĞIİÖŞÜ\s]/g, '');
				});
			});

			// Phone number input formatting
			phoneNumberInput.addEventListener('input', function () {
				let value = this.value.replace(/\D/g, ''); // Only numbers
				if (value.startsWith('0')) {
					value = value.substring(1); // Remove leading 0
				}
				this.value = value;
			});

			// Real-time password confirmation check
			confirmPasswordInput.addEventListener('input', function () {
				if (passwordInput.value !== this.value) {
					this.setCustomValidity('Şifreler eşleşmiyor');
					this.classList.add('is-invalid');
					this.classList.remove('is-valid');
				} else {
					this.setCustomValidity('');
					this.classList.remove('is-invalid');
					this.classList.add('is-valid');
				}
			});

			// Password input validation styling
			passwordInput.addEventListener('input', function () {
				if (this.value.length >= 6) {
					this.classList.add('is-valid');
					this.classList.remove('is-invalid');
				} else {
					this.classList.remove('is-valid');
					if (this.value.length > 0) {
						this.classList.add('is-invalid');
					}
				}

				// Re-validate confirm password
				if (confirmPasswordInput.value.length > 0) {
					confirmPasswordInput.dispatchEvent(new Event('input'));
				}
			});

			// Form submission
			registerForm.addEventListener('submit', async function (e) {
				e.preventDefault();

				const name = nameInput.value.trim();
				const surname = surnameInput.value.trim();
				const phoneNumber = phoneNumberInput.value.trim();
				const password = passwordInput.value.trim();
				const confirmPassword = confirmPasswordInput.value.trim();

				// Validation
				if (name.length < 2) {
					showError('Ad en az 2 karakter olmalıdır.');
					return;
				}

				if (surname.length < 2) {
					showError('Soyad en az 2 karakter olmalıdır.');
					return;
				}

				if (phoneNumber.length < 10) {
					showError('Telefon numarası en az 10 haneli olmalıdır.');
					return;
				}

				if (password.length < 6) {
					showError('Şifre en az 6 karakter olmalıdır.');
					return;
				}

				if (password !== confirmPassword) {
					showError('Şifreler eşleşmiyor.');
					return;
				}

				if (!termsCheck.checked) {
					showError('Kullanım şartlarını kabul etmelisiniz.');
					return;
				}

				// Show loading state
				setLoading(true);
				hideMessages();

				try {
					const response = await fetch('/profile/register/user', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json'
						},
						body: JSON.stringify({
							name: name,
							surname: surname,
							phoneNumber: phoneNumber,
							password: password
						})
					});

					const data = await response.json();

					if (response.ok) {
						// Registration successful
						showSuccess('Kayıt başarılı! Giriş sayfasına yönlendiriliyorsunuz...');

						// Reset form
						registerForm.reset();
						// Remove validation classes
						document.querySelectorAll('.is-valid, .is-invalid').forEach(el => {
							el.classList.remove('is-valid', 'is-invalid');
						});

						// Redirect to login page after 3 seconds
						setTimeout(() => {
							window.location.href = '/login';
						}, 3000);

					} else {
						// Registration failed
						showError(data.message || 'Kayıt başarısız. Lütfen bilgilerinizi kontrol edin.');
					}

				} catch (error) {
					console.error('Register error:', error);
					showError('Bağlantı hatası. Lütfen daha sonra tekrar deneyin.');
				} finally {
					setLoading(false);
				}
			});

			function setLoading(loading) {
				if (loading) {
					registerBtn.disabled = true;
					registerSpinner.style.display = 'inline-block';
					registerBtn.innerHTML = '<span class="spinner"></span>Kayıt yapılıyor...';
				} else {
					registerBtn.disabled = false;
					registerSpinner.style.display = 'none';
					registerBtn.innerHTML = 'Sign Up';
				}
			}

			function showError(message) {
				errorMessage.textContent = message;
				errorMessage.style.display = 'block';
				successMessage.style.display = 'none';

				// Scroll to top to show error
				window.scrollTo({ top: 0, behavior: 'smooth' });
			}

			function showSuccess(message) {
				successMessage.textContent = message;
				successMessage.style.display = 'block';
				errorMessage.style.display = 'none';

				// Scroll to top to show success
				window.scrollTo({ top: 0, behavior: 'smooth' });
			}

			function hideMessages() {
				errorMessage.style.display = 'none';
				successMessage.style.display = 'none';
			}
		});
	</script>

	<%- include('partials/footer')%>